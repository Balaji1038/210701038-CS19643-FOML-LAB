import numpy as np
import pandas as pd
import warnings
warnings.filterwarnings("ignore")

import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

from IPython.core.display import display, HTML

from datetime import datetime

df = pd.read_csv("/content/waterquality.csv")

df.head()

df.isna().sum()

for i in df.columns[1:]:
    df[i] = df[i].fillna(df[i].median())

fig = px.line(df, x=df.columns[0], y=df.columns[1:][0])
fig.show()
for i in range(0, len(df.columns[2:]), 2):
    fig = px.line(df, x=df.columns[0], y=df.columns[2:][i:i+2])
    fig.show()

df.dropna(inplace=True)

def convert_dates(x):
    date = datetime.strptime(x, "%Y-%m-%d")
    return [date.year, date.month]

df["Year"] = df["Date"].apply(lambda x: convert_dates(x)[0])
df["Month"] = df["Date"].apply(lambda x: convert_dates(x)[1])

def bar_label(axes, _type="edge", rotation=0):
    for container in axes.containers:
        axes.bar_label(container, label_type=_type, rotation=rotation)

months = ["January", "February", "March",
         "April", "May", "June",
         "July", "August", "September",
         "October", "November", "December"]

def plots(df, name, num, axes, month=False):
    grouped = df.groupby(name)
    mean = pd.DataFrame(grouped[num].mean())
    mean["id"] = mean.index.tolist()
    if month:
        for i in range(len(mean)):
            mean.iloc[i, 1] = months[mean.iloc[i, 1]-1]
    sns.barplot(x=mean.iloc[:, 1], y=mean.iloc[:, 0], ax=axes)

fig, axes = plt.subplots(nrows=1, ncols=7, figsize=(15, 6))
for i, j in enumerate(df.columns[1:-2]):
    plots(df, "Year", j, axes[i])
    axes[i].set_xticklabels(())
    axes[i].set_xlabel("")
plt.tight_layout()
plt.show()

years = df["Year"].unique()
years = sorted(years)

for i in years[-5:]:
    display(HTML("<h2>Monthly water quality distribution for {}</h2>".format(i)))
    temp_df = df[df["Year"] == i]
    fig, axes = plt.subplots(nrows=1, ncols=7, figsize=(15, 6))
    for j, k in enumerate(df.columns[1:-2]):
        plots(temp_df, "Month", k, axes[j], True)
        align = "edge"
        if j != 0:
            align = "center"
        bar_label(axes[j], align, 90)
        axes[j].set_xticklabels(axes[j].get_xticklabels(), rotation=90)
        axes[j].set_xlabel("Month")
    plt.tight_layout()
    plt.show()